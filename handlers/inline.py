from telebot import types
import json

def show_profession_filter(bot, chat_id):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–≠–ª–µ–∫—Ç—Ä–∏–∫", callback_data="filter_—ç–ª–µ–∫—Ç—Ä–∏–∫"))
    markup.add(types.InlineKeyboardButton("–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫", callback_data="filter_—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫"))
    markup.add(types.InlineKeyboardButton("–ê–≤—Ç–æ–º–∞—Å—Ç–µ—Ä", callback_data="filter_–∞–≤—Ç–æ–º–∞—Å—Ç–µ—Ä"))
    markup.add(types.InlineKeyboardButton("–°—Ç—Ä–æ–∏—Ç–µ–ª—å", callback_data="filter_—Å—Ç—Ä–æ–∏—Ç–µ–ª—å"))
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:", reply_markup=markup)

def handle_filter_callback(bot, call):
    profession = call.data.replace("filter_", "")
    with open("usta_superbot_x/data/masters.json", "r") as f:
        masters = json.load(f)
    filtered = [m for m in masters if profession.lower() in m.get("profession", "").lower()]
    if not filtered:
        bot.send_message(call.message.chat.id, f"–ú–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ '{profession}' –ø–æ–∫–∞ –Ω–µ—Ç.")
        return
    for m in filtered:
        text = f"üë§ {m['name']}
üõ†Ô∏è {m['profession']}
üìÖ –°—Ç–∞–∂: {m['experience']}
üó£Ô∏è –Ø–∑—ã–∫–∏: {m['languages']}"
        bot.send_message(call.message.chat.id, text)
